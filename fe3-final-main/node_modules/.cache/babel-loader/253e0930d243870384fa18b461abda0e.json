{"ast":null,"code":"var _jsxFileName = \"/Users/sergioracchumi/Downloads/fe3-final-main/src/Components/utils/global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHANGE_THEME = \"CHANGE_THEME\";\nconst SET_DATA = \"SET_DATA\";\nconst darkTheme = {\n  background: \"black\",\n  color: \"white\"\n};\nconst lightTheme = {\n  background: \"white\",\n  color: \"black\"\n};\nexport const initialState = {\n  theme: \"light\",\n  data: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case CHANGE_THEME:\n      return { ...state,\n        theme: action.payload\n      };\n\n    case SET_DATA:\n      return { ...state,\n        data: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const contextValues = useMemo(() => {\n    const changeTheme = theme => {\n      dispatch({\n        type: CHANGE_THEME,\n        payload: theme\n      });\n    };\n\n    const setData = data => {\n      dispatch({\n        type: SET_DATA,\n        payload: data\n      });\n    };\n\n    const themeStyles = state.theme === \"dark\" ? darkTheme : lightTheme;\n    return {\n      state,\n      changeTheme,\n      setData,\n      themeStyles\n    };\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      contextValues\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"Iq1jtjed9pobc7S/Cj/4dyD6ohg=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["useMemo","useReducer","createContext","CHANGE_THEME","SET_DATA","darkTheme","background","color","lightTheme","initialState","theme","data","reducer","state","action","type","payload","ContextGlobal","undefined","ContextProvider","children","dispatch","contextValues","changeTheme","setData","themeStyles"],"sources":["/Users/sergioracchumi/Downloads/fe3-final-main/src/Components/utils/global.context.jsx"],"sourcesContent":["import { useMemo } from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\n\nconst CHANGE_THEME = \"CHANGE_THEME\";\n\nconst SET_DATA = \"SET_DATA\";\n\nconst darkTheme = {\n  background: \"black\",\n  color:\"white\",\n};\n\nconst lightTheme = {\n  background: \"white\",\n  color:\"black\",\n};\n\nexport const initialState = {theme: \"light\", data: []}\n\nconst reducer = (state,action) => {\n  switch (action.type){\n    case CHANGE_THEME:\n      return { ...state, theme: action.payload };\n    case SET_DATA:\n          return { ...state, data: action.payload };\n    default:\n      return state;  \n  }\n};\n\nexport const ContextGlobal = createContext(undefined);\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const [state, dispatch] = useReducer(reducer,initialState);\n\n  const contextValues = useMemo(() => {\n    const changeTheme = (theme) => {\n      dispatch({type: CHANGE_THEME, payload: theme});\n    };\n    const setData = (data) => {\n      dispatch({type: SET_DATA, payload: data});\n    };\n\n    const themeStyles = state.theme === \"dark\" ? darkTheme : lightTheme;\n\n    return {state, changeTheme, setData, themeStyles};\n  }, [state]);\n\n  return (\n    <ContextGlobal.Provider value={{contextValues}}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,MAAMC,YAAY,GAAG,cAArB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAE,OADI;EAEhBC,KAAK,EAAC;AAFU,CAAlB;AAKA,MAAMC,UAAU,GAAG;EACjBF,UAAU,EAAE,OADK;EAEjBC,KAAK,EAAC;AAFW,CAAnB;AAKA,OAAO,MAAME,YAAY,GAAG;EAACC,KAAK,EAAE,OAAR;EAAiBC,IAAI,EAAE;AAAvB,CAArB;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;EAChC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKZ,YAAL;MACE,OAAO,EAAE,GAAGU,KAAL;QAAYH,KAAK,EAAEI,MAAM,CAACE;MAA1B,CAAP;;IACF,KAAKZ,QAAL;MACM,OAAO,EAAE,GAAGS,KAAL;QAAYF,IAAI,EAAEG,MAAM,CAACE;MAAzB,CAAP;;IACN;MACE,OAAOH,KAAP;EANJ;AAQD,CATD;;AAWA,OAAO,MAAMI,aAAa,gBAAGf,aAAa,CAACgB,SAAD,CAAnC;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,MAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBpB,UAAU,CAACW,OAAD,EAASH,YAAT,CAApC;EAEA,MAAMa,aAAa,GAAGtB,OAAO,CAAC,MAAM;IAClC,MAAMuB,WAAW,GAAIb,KAAD,IAAW;MAC7BW,QAAQ,CAAC;QAACN,IAAI,EAAEZ,YAAP;QAAqBa,OAAO,EAAEN;MAA9B,CAAD,CAAR;IACD,CAFD;;IAGA,MAAMc,OAAO,GAAIb,IAAD,IAAU;MACxBU,QAAQ,CAAC;QAACN,IAAI,EAAEX,QAAP;QAAiBY,OAAO,EAAEL;MAA1B,CAAD,CAAR;IACD,CAFD;;IAIA,MAAMc,WAAW,GAAGZ,KAAK,CAACH,KAAN,KAAgB,MAAhB,GAAyBL,SAAzB,GAAqCG,UAAzD;IAEA,OAAO;MAACK,KAAD;MAAQU,WAAR;MAAqBC,OAArB;MAA8BC;IAA9B,CAAP;EACD,CAX4B,EAW1B,CAACZ,KAAD,CAX0B,CAA7B;EAaA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACS;IAAD,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAvBM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}